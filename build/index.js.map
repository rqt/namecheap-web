{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { debuglog } from 'util'\nimport bosom from 'bosom'\nimport rqt from 'rqt'\nimport Authenticator from './lib/Authenticator'\nimport App from './lib/App'\nimport { deepEqual } from './lib'\n\nconst LOG = debuglog('@rqt/namecheap-web')\n\nconst getHost = (S) => {\n  return `https://www.${S ? 'sandbox.' : ''}namecheap.com`\n}\nconst getApHost = (S) => {\n  return `https://ap.www.${S ? 'sandbox.' : ''}namecheap.com`\n}\n\nconst USER_AGENT = 'Mozilla/5.0 (Node.js; @rqt/namecheap-web) https://github.com/rqt/namecheap-web'\n\n/**\n * An API to namecheap.com via the web interface, with an ability to log in using 2-factor Auth and check Whois.\n */\nexport default class NamecheapWeb {\n  /**\n   * Create an instance of a new client.\n   * @param {Options} options Options for the web client.\n * @param {boolean} [options.sandbox=false] Whether to use the `sandbox` version. Default `false`.\n * @param {boolean} [options.readSession=false] Read and store the cookies for the session from the local file. Default `false`.\n * @param {string} [options.sessionFile=\".namecheap-web.json\"] If reading session, indicates the file where to store cookies. Default `.namecheap-web.json`.\n   */\n  constructor(options = {}) {\n    const {\n      sandbox,\n      readSession,\n      sessionFile = '.namecheap-web.json',\n    } = options\n    this.settings = {\n      sandbox,\n      readSession,\n      sessionFile,\n    }\n  }\n\n  async auth(username, password, phone, force) {\n    let cookies\n    if (this.settings.readSession && !force) {\n      cookies = await getSession(this.settings.sessionFile)\n    }\n    if (!cookies) {\n      const host = getHost(this.settings.sandbox)\n      const authenticator = new Authenticator({\n        username,\n        password,\n        host,\n        phone,\n        userAgent: USER_AGENT,\n      })\n\n      await authenticator.obtainSession()\n      cookies = await authenticator.signIn()\n      await this._saveSession(cookies)\n    }\n\n    const apHost = getApHost(this.settings.sandbox)\n    this._app = new App({\n      cookies,\n      password,\n      host: apHost,\n      userAgent: USER_AGENT,\n    })\n    const works = await this._wrap(this._app.test())\n    if (!works && force) {\n      throw new Error('Could not authenticate.')\n    }\n    if (!works) {\n      await this.auth(username, password, phone, true)\n    }\n  }\n  async _saveSession(cookies) {\n    if (this.settings.readSession) {\n      await saveSession(cookies, this.settings.sessionFile)\n    }\n  }\n  /**\n   * Execute a method from the app and update cookies file if needed (to extend session).\n   * @private\n   */\n  async _wrap(p) {\n    const c = getAllowedCookies(this._app.session.cookies)\n    const res = await p\n    const c2 = getAllowedCookies(this._app.session.cookies)\n    try {\n      deepEqual(c, c2)\n    } catch ({ message }) {\n      LOG(message)\n      await this._saveSession(c2)\n    }\n    return res\n  }\n  /**\n   * Add an IP to white-listed IPs.\n   */\n  async whitelistIP(ip, name) {\n    await this._wrap(this._app.whitelistIP(ip, name))\n  }\n  /**\n   * Get the list of all whitelisted IP addresses from https://ap.www.namecheap.com/settings/tools/apiaccess/whitelisted-ips.\n   * @return {Promise.<WhitelistedIP[]>}\n   */\n  async getWhitelistedIPList() {\n    const res = await this._wrap(this._app.getWhitelistedIPList())\n    return res\n  }\n  /**\n   * Get the public IP address using https://api.ipify.org.\n   */\n  static async LOOKUP_IP() {\n    const res = await rqt('https://api.ipify.org')\n    return res\n  }\n  /**\n   * Remove the IP from the white-listed IPs by its name.\n   */\n  async removeWhitelistedIP(name) {\n    await this._wrap(this._app.removeWhitelistedIP(name))\n  }\n}\n\nconst getAllowedCookies = (cookies) => {\n  const keys = ['x-ncpl-auth', '.ncauth', 'SessionId', 'U']\n  return Object.keys(cookies).reduce((acc, k) => {\n    if (keys.includes(k)) return { ...acc, [k]: cookies[k] }\n    return acc\n  }, {})\n}\n\nconst getSession = async (path) => {\n  try {\n    const cookies = await bosom(path)\n    return cookies\n  } catch (err) {\n    return null\n  }\n}\nconst saveSession = async (cookies, path) => {\n  await bosom(path, cookies)\n}\n\n/* documentary types/options.xml */\n/**\n * @typedef {Object} Options Options for the web client.\n * @prop {boolean} [sandbox=false] Whether to use the `sandbox` version. Default `false`.\n * @prop {boolean} [readSession=false] Read and store the cookies for the session from the local file. Default `false`.\n * @prop {string} [sessionFile=\".namecheap-web.json\"] If reading session, indicates the file where to store cookies. Default `.namecheap-web.json`.\n */\n\n/* documentary types/ips.xml */\n/**\n * @typedef {Object} WhitelistedIP A white-listed IP which can be used for API calls.\n * @prop {string} Name The name of the IP.\n * @prop {string} IpAddress The IP address.\n * @prop {Date} ModifyDate The modification date.\n */\n"]}