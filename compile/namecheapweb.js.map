{
"version":3,
"file":"compile/namecheapweb.js",
"lineCount":614,
"mappings":"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",
"sources":["node_modules/util/index.js","node_modules/fs/index.js","node_modules/stream/index.js","node_modules/erotic/src/lib.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/@wrote/write/src/index.js","node_modules/bosom/src/index.js","node_modules/https/index.js","node_modules/http/index.js","node_modules/url/index.js","node_modules/zlib/index.js","node_modules/@rqt/aqt/src/lib/make-request.js","node_modules/@rqt/aqt/src/lib/index.js","node_modules/@rqt/aqt/src/index.js","node_modules/rqt/src/lib/Session.js","node_modules/assert/index.js","node_modules/readline/index.js","node_modules/promto/src/index.js","node_modules/reloquent/src/lib/ask.js","node_modules/reloquent/src/lib/ask-questions.js","node_modules/reloquent/src/index.js","node_modules/mismatch/src/index.js","node_modules/erte/src/index.js","src/lib/index.js","src/lib/Authenticator.js","src/lib/App.js","src/index.js","src/depack.js"],
"sourcesContent":["export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import { createWriteStream } from 'fs'\nimport erotic from 'erotic'\n\n/**\n * Write a file to the filesystem.\n * @param {string} path The path of the file to write.\n * @param {string|Buffer} data The data to write.\n */\nexport default async function write(path, data) {\n  if (!path) throw new Error('No path is given.')\n  const er = erotic(true)\n  const ws = createWriteStream(path)\n  await new Promise((r, j) => {\n    ws\n      .on('error', (e) => {\n        const err = er(e)\n        j(err)\n      })\n      .on('close', r)\n      .end(data)\n  })\n}","import { debuglog } from 'util'\nimport read from '@wrote/read'\nimport write from '@wrote/write'\n\nconst LOG = debuglog('bosom')\n\nconst writeJSON = async (path, data, config) => {\n  const {\n    replacer = null,\n    space = null,\n  } = config\n  const json = JSON.stringify(data, replacer, space)\n  await write(path, json)\n}\n\n/**\n * Read or write a JSON file.\n * @param {string} path Path to the file to read.\n * @param {Object} [data] Data to write to the file (if JSON file exists, fields in it will be overridden).\n * @param {!_bosom.Options} [config] how to write data.\n */\nconst bosom = async (path, data, config = {}) => {\n  if (data) {\n    const res = await writeJSON(path, data, config)\n    return res\n  }\n  LOG('Reading %s', path)\n  const r = await read(path)\n  const res = JSON.parse(r)\n  return res\n}\n\nexport default bosom\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Options} _bosom.Options\n */","export default https\nexport const {\n  Agent,\n  Server,\n  createServer,\n  get,\n  globalAgent,\n  request,\n} = https","export default http\nexport const {\n  Agent,\n  ClientRequest,\n  IncomingMessage,\n  METHODS,\n  OutgoingMessage,\n  STATUS_CODES,\n  Server,\n  ServerResponse,\n  createServer,\n  get,\n  globalAgent,\n  maxHeaderSize,\n  request,\n} = http","export default url\nexport const {\n  URL,\n  URLSearchParams,\n  Url,\n  domainToASCII,\n  domainToUnicode,\n  format,\n  parse,\n  resolve,\n} = url","export default zlib\nexport const {\n  Deflate,\n  DeflateRaw,\n  Gunzip,\n  Gzip,\n  Inflate,\n  InflateRaw,\n  Unzip,\n  Z_BEST_COMPRESSION,\n  Z_BEST_SPEED,\n  Z_BLOCK,\n  Z_BUF_ERROR,\n  Z_DATA_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_ERRNO,\n  Z_FILTERED,\n  Z_FINISH,\n  Z_FIXED,\n  Z_FULL_FLUSH,\n  Z_HUFFMAN_ONLY,\n  Z_MEM_ERROR,\n  Z_NEED_DICT,\n  Z_NO_COMPRESSION,\n  Z_NO_FLUSH,\n  Z_OK,\n  Z_PARTIAL_FLUSH,\n  Z_RLE,\n  Z_STREAM_END,\n  Z_STREAM_ERROR,\n  Z_SYNC_FLUSH,\n  Z_VERSION_ERROR,\n  constants,\n  createDeflate,\n  createDeflateRaw,\n  createGunzip,\n  createGzip,\n  createInflate,\n  createInflateRaw,\n  createUnzip,\n  deflate,\n  deflateRaw,\n  deflateRawSync,\n  deflateSync,\n  gunzip,\n  gunzipSync,\n  gzip,\n  gzipSync,\n  inflate,\n  inflateRaw,\n  inflateRawSync,\n  inflateSync,\n  unzip,\n  unzipSync,\n} = zlib","import erotic from 'erotic'\nimport { collect } from 'catchment'\nimport { createGunzip } from 'zlib'\nimport { request as Request } from 'http' // eslint-disable-line\n\n/**\n * @param {!http.IncomingMessage} res\n */\nexport const isMessageGzip = (res) => {\n  /**\n   * @suppress {checkTypes}\n   */\n  const { 'content-encoding': contentEncoding } = res.headers\n  return contentEncoding == 'gzip'\n}\n\n/**\n * @param {typeof Request} request The actual http or https request function.\n * @param {!http.RequestOptions} requestOptions\n * @param {!Object} [config] Config object.\n * @param {boolean} [config.justHeaders] only return headers as soon as available. false\n * @param {boolean} [config.binary] return binary\n * @param {boolean} [config.er] erotic callback\n */\nconst makeRequest = (request, requestOptions, config = {}) => {\n  const { justHeaders, binary, er = erotic(true) } = config\n  /** @type {!http.ClientRequest} */\n  let req\n\n  /** @type {!http.IncomingHttpHeaders} */\n  let headers\n  /** @type {{statusMessage: string, statusCode: number}} */\n  let m\n  /** @type {string|!Buffer} */\n  let body\n  let rawLength = 0\n  let byteLength = 0\n\n  const promise = new Promise((r, j) => {\n    req = request(requestOptions, async (res) => {\n      ({ headers } = res)\n      const { statusMessage, statusCode } = res\n      m = { statusMessage, statusCode }\n      if (justHeaders) {\n        res.destroy()\n        r()\n        return\n      }\n      const isGzip = isMessageGzip(res)\n\n      res.on('data', data => rawLength += data.byteLength )\n\n      const rs = isGzip\n        ? res.pipe(createGunzip())\n        : res\n\n      body = await collect(rs, { binary })\n      byteLength = body.length\n\n      r()\n    })\n      .on('error', (error) => {\n        const err = er(error)\n        j(err)\n      })\n      .on('timeout', () => {\n        req.abort()\n      })\n  }).then(() => {\n    const r = {\n      body,\n      headers,\n      ...m,\n      rawLength,\n      byteLength,\n      parsedBody: null,\n    }\n    return r\n  })\n  return { req, promise }\n}\n\nexport default makeRequest\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ClientRequest} http.ClientRequest\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').RequestOptions} http.RequestOptions\n */","import erotic from 'erotic'\nimport makeRequest from './make-request'\n\nexport const getFormData = (form = {}) => {\n  const urlEncodedDataPairs = Object.keys(form).reduce((acc, key) => {\n    const v = form[key]\n    const p = `${encodeURIComponent(key)}=${encodeURIComponent(v)}`\n    return [...acc, p]\n  }, [])\n\n  const d = urlEncodedDataPairs.join('&').replace(/%20/g, '+')\n  return d\n}\n\nexport const getData = (type, data) => {\n  switch (type) {\n  case 'json':\n    data = JSON.stringify(data)\n    type = 'application/json'\n    break\n  case 'form':\n    data = getFormData(data)\n    type = 'application/x-www-form-urlencoded'\n    break\n  }\n  return {\n    data,\n    contentType: type,\n  }\n}\n\nexport const exec = async (request, requestOptions,\n  { data, justHeaders, binary, er = erotic(true) },\n) => {\n  const { req, promise } = makeRequest(request, requestOptions, {\n    justHeaders,\n    binary,\n    er,\n  })\n  req.end(data)\n  const res = await promise\n\n  const isJson = isHeadersJson(res.headers)\n\n  if (isJson && res.body) {\n    try {\n      res.parsedBody = JSON.parse(res.body)\n    } catch (e) {\n      const err = er(e)\n      err.response = res.body\n      throw err\n    }\n  }\n\n  return res\n}\n\n/**\n * Check if the returned content-type starts with application/json.\n * @param {!http.IncomingHttpHeaders} headers\n */\nconst isHeadersJson = (headers) => {\n  /**\n   * @suppress {checkTypes}\n   */\n  const { 'content-type': contentType = '' } = headers\n  return contentType.startsWith('application/json')\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */","import { request as https } from 'https'\nimport { request as http } from 'http'\nimport { debuglog } from 'util'\nimport erotic from 'erotic'\nimport { parse } from 'url'\nimport { getData, exec } from './lib'\n\nlet ua\ntry {\n  // require in index won't lead to --process_common_js_modules\n  const { 'version': version, 'name': name } = require('../package.json')\n  ua = name == '@rqt/aqt' ? `@rqt/aqt/${version}` : `@rqt/aqt via ${name}/${version}`\n} catch (err) {\n  ua = '@aqt/rqt'\n}\n\nconst LOG = debuglog('aqt')\n\n/**\n * Request a web page and return information including `headers`, `statusCode`, `statusMessage` along with the `body` (which is also parsed if JSON received).\n * @param {string} address The URL such as http://example.com/api.\n * @param {_rqt.AqtOptions} [options] Configuration for requests.\n */\nconst aqt = async (address, options = {}) => {\n  const {\n    data: d,\n    type = 'json',\n    headers: outgoingHeaders = {\n      'User-Agent': `Mozilla/5.0 (Node.JS) ${ua}`,\n    },\n    compress = true,\n    binary = false,\n    justHeaders = false,\n    method,\n    timeout,\n  } = options\n  const er = erotic(true)\n\n  const { hostname, protocol, port, path } = parse(address)\n  const isHttps = protocol === 'https:'\n  const request = isHttps ? https : http\n\n  const opts = {\n    hostname,\n    port,\n    path,\n    headers: {\n      ...outgoingHeaders,\n    },\n    timeout,\n    method,\n  }\n\n  let data\n  if (d) {\n    const _d = getData(type, d)\n      ; ({ data } = _d)\n    const { contentType } = _d\n\n    opts.method = method || 'POST'\n    if (!('Content-Type' in opts.headers)) {\n      opts.headers['Content-Type'] = contentType\n    }\n    if (!('Content-Length' in opts.headers)) {\n      opts.headers['Content-Length'] = Buffer.byteLength(data)\n    }\n  }\n  if (compress && !('Accept-Encoding' in opts.headers)) {\n    opts.headers['Accept-Encoding'] = 'gzip, deflate'\n  }\n\n  const {\n    body, headers, byteLength, statusCode, statusMessage, rawLength,\n    parsedBody,\n  } = await exec(request, opts, {\n    data,\n    justHeaders,\n    binary,\n    er,\n  })\n\n  LOG('%s %s B%s', address, byteLength, `${byteLength != rawLength ? ` (raw ${rawLength} B)` : ''}`)\n\n  /** @type {!_rqt.AqtReturn} */\n  const res = {\n    body: parsedBody ? parsedBody : body,\n    headers,\n    statusCode,\n    statusMessage,\n  }\n  return res\n}\n\nexport default aqt\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').AqtOptions} _rqt.AqtOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').AqtReturn} _rqt.AqtReturn\n */","import aqt from '@rqt/aqt'\n\n/**\n * An instance of a session class can maintain cookies.\n * @implements {_rqt.Session}\n */\nexport default class Session {\n  /**\n   * Create a new session that can be used to make requests in sequence, and remember cookies.\n   * @param {!_rqt.SessionOptions} options Options for a session.\n   */\n  constructor(options = {}) {\n    const {\n      host,\n      headers = {},\n    } = options\n\n    this.host = host\n    this.headers = headers\n    this.cookies = {}\n  }\n  /**\n   * Make a request and return the body.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Options for requests.\n   */\n  async rqt(location, options = {}) {\n    const { body } = await this._request(location, options)\n    /** @type {string} */\n    const r = body\n    return r\n  }\n  /**\n   * Make a request and return the body as buffer.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Options for requests.\n   */\n  async bqt(location, options = {}) {\n    const { body } = await this._request(location, {\n      ...options,\n      binary: true,\n    })\n    /** @type {!Buffer} */\n    const r = body\n    return r\n  }\n  /**\n   * Make a request and return the parsed JSON body as an object.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Options for requests.\n   */\n  async jqt(location, options = {}) {\n    const { body } = await this._request(location, options)\n    /** @type {!Object} */\n    const r = body\n    return r\n  }\n  getFullUrl(location) {\n    if (this.host) {\n      return `${this.host}${location}`\n    }\n    return location\n  }\n  /**\n   * Make a request and return the body, headers and status.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Configuration for requests.\n   */\n  async aqt(location, options = {}) {\n    const res = await this._request(location, options)\n    return res\n  }\n  async _request(location, options = {}) {\n    const loc = this.getFullUrl(location)\n    const opts = getAllOptions(this.headers, options, this.Cookie)\n    const res = await aqt(loc, opts)\n    const { headers } = res\n    this.cookies = updateCookies(this.cookies, headers)\n    return res\n  }\n  get Cookie() {\n    return getCookieHeader(this.cookies)\n  }\n}\n\nconst getAllOptions = (sessionHeaders, options, Cookie) => {\n  const {\n    headers = {},\n    ...opts\n  } = options\n  return {\n    ...opts,\n    headers: {\n      ...sessionHeaders,\n      ...headers,\n      Cookie,\n    },\n  }\n}\n\nconst getCookieHeader = (cookies) => {\n  const r = Object.keys(cookies).reduce((acc, key) => {\n    const val = cookies[key]\n    const s = `${key}=${val}`\n    return [...acc, s]\n  }, [])\n  return r.join('; ')\n}\n\n/**\n * @param {!Object} cookies\n * @param {!http.IncomingHttpHeaders} headers\n */\nconst updateCookies = (cookies, headers) => {\n  const newCookies = extractCookies(headers)\n  const r = {\n    ...cookies,\n    ...newCookies,\n  }\n  const res = Object.keys(r).reduce((acc, current) => {\n    const val = r[current]\n    if (!val) return acc\n    return {\n      ...acc,\n      [current]: val,\n    }\n  }, {})\n  return res\n}\n\nconst extractCookie = c => {\n  const res = /^(.+?)=(.*?);/.exec(c)\n  if (!res) throw new Error(`Could not extract a cookie from ${c}`)\n  const [, name, value] = res\n  return {\n    [name]: value,\n  }\n}\nconst extractCookies = ({ 'set-cookie': setCookie = [] } = {}) => {\n  return setCookie.reduce((acc, current) => {\n    const c = extractCookie(current)\n    return {\n      ...acc,\n      ...c,\n    }\n  }, {})\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').SessionOptions} _rqt.SessionOptions\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/aqt').AqtOptions} _rqt.AqtOptions\n */","export default assert\nexport const {\n  AssertionError,\n  deepEqual,\n  deepStrictEqual,\n  doesNotThrow,\n  equal,\n  fail,\n  ifError,\n  notDeepEqual,\n  notDeepStrictEqual,\n  notEqual,\n  notStrictEqual,\n  ok,\n  strictEqual,\n  throws,\n} = assert","export default readline\nexport const {\n  Interface,\n  clearLine,\n  clearScreenDown,\n  createInterface,\n  cursorTo,\n  emitKeypressEvents,\n  moveCursor,\n} = readline","function createTimeout(desc, timeout, cb) {\n  return setTimeout(() => {\n    const message = `${desc ? desc : 'Promise'} has timed out after ${timeout}ms`\n    const err = new Error(message)\n    err.stack = `Error: ${err.message}`\n    cb(err)\n  }, timeout)\n}\n\nfunction makeTimeoutPromise(desc, timeout) {\n  let to\n  const promise = new Promise((_, reject) => {\n    to = createTimeout(desc, timeout, reject)\n  })\n  return { timeout: to, promise }\n}\n\n/**\n * Create a promise which will be rejected after a timeout.\n * @param {!Promise} promise A promise to race with\n * @param {number} timeout Timeout in ms after which to reject\n * @param {string} [desc] Description of a promise to be printed in error\n * @returns {!Promise} A promise with a timeout\n */\nexport default async function createPromiseWithTimeout(promise, timeout, desc) {\n  if (!(promise instanceof Promise))\n    throw new Error('Promise expected')\n  if (!timeout)\n    throw new Error('Timeout must be a number')\n  if (timeout < 0)\n    throw new Error('Timeout cannot be negative')\n\n  const { promise: toPromise, timeout: to } = makeTimeoutPromise(desc, timeout)\n  try {\n    return await Promise.race([\n      promise,\n      toPromise,\n    ])\n  } finally {\n    clearTimeout(to)\n  }\n}","import { createInterface } from 'readline'\nimport promto from 'promto'\n\n/**\n * Ask user a question and wait for an answer.\n * @param {string} question Question to present to the user.\n * @param {{ password: (boolean| undefined), timeout: (number|undefined), input: (stream.Readable|NodeJS.ReadStream|undefined), output: (stream.Writable|NodeJS.WriteStream|undefined) }} options The options.\n */\nexport default function ask(question, options = {}) {\n  const {\n    timeout,\n    password = false,\n    output = process.stdout,\n    input = process.stdin,\n    ...rest\n  } = options\n  const rl = createInterface(/** @type {!readline.ReadLineOptions} */ ({\n    input,\n    output,\n    ...rest,\n  }))\n  if (password) {\n    /**\n     * Undocumented API.\n     * @type {!NodeJS.WriteStream}\n     * @suppress {checkTypes}\n     */\n    const o = rl['output']\n    /**\n     * Undocumented API.\n     * @suppress {checkTypes}\n     */\n    rl['_writeToOutput'] = (s) => {\n      if (['\\r\\n', '\\n', '\\r'].includes(s))\n        return o.write(s)\n\n      const v = s.split(question)\n      if (v.length == '2') {\n        o.write(question)\n        o.write('*'.repeat(v[1].length))\n      } else {\n        o.write('*')\n      }\n    }\n  }\n  const p = new Promise(rl.question.bind(rl, question))\n\n  const promise = timeout\n    ? promto(p, timeout, `reloquent: ${question}`)\n    : p\n  /**\n   * @suppress {checkTypes}\n   */\n  rl['promise'] = tryPromise(promise, rl)\n  return rl\n}\n\nconst tryPromise = async (promise, rl) => {\n  try {\n    const res = await promise\n    return res\n  } finally {\n    rl.close()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('readline').ReadLineOptions} readline.ReadLineOptions\n */","import ask from './ask'\n\n/**\n * Color foreground with grey\n * @param {string} t\n */\nexport function c(t) {\n  return `\\x1b[90m${t}\\x1b[0m`\n}\n\n/**\n * Ask a set of questions.\n * @param {_reloquent.Questions} questions An object with questions as values\n * @param {number} [timeout] How long to wait before answer\n * @returns {!Promise<!Object<string, string>>} A promise where keys from the questions object are validated, assigned default values if required, and populated with answers. Validation function should either throw or return nothing, or throw an error.\n */\nexport default async function askQuestions(questions, timeout) {\n  if (typeof questions != 'object')\n    throw new Error('Please give an object with questions')\n\n  const keys = Object.keys(/** @type {!Object} */ (questions))\n  const res = await keys.reduce(async (acc, key) => {\n    const accRes = await acc\n\n    const value = questions[key]\n    /** @type {!_reloquent.Question} */\n    let question\n    switch (typeof value) {\n    case 'object':\n      question = /** @type {!_reloquent.Question} */ ({ ...value })\n      break\n    case 'string':\n      question = { text: value }\n      break\n    default:\n      throw new Error('A question must be a string or an object.')\n    }\n\n    question.text = `${question.text}${question.text.endsWith('?') ? '' : ':'} `\n\n    let defaultValue\n    let gotDefaultValue\n    if (question.defaultValue) {\n      defaultValue = question.defaultValue\n    }\n    if (question.getDefault) {\n      gotDefaultValue = await question.getDefault()\n    }\n\n    let dv = defaultValue || ''\n    if (defaultValue && gotDefaultValue && defaultValue != gotDefaultValue) {\n      dv = c(defaultValue)\n    } else if (defaultValue && defaultValue == gotDefaultValue) {\n      dv = ''\n    }\n    let gtd = gotDefaultValue || ''\n    const text = `${question.text}${dv ? `[${dv}] ` : ''}${gtd ? `[${gtd}] ` : ''}`\n    const { 'promise': promise } = ask(text, {\n      timeout,\n      password: question.password,\n    })\n\n    const a = await promise\n    let answer = a || gotDefaultValue || question.defaultValue\n\n    if (typeof question.validation == 'function') {\n      question.validation(answer)\n    }\n    if (typeof question.postProcess == 'function') {\n      answer = await question.postProcess(answer)\n    }\n    return {\n      ...accRes,\n      [key]: answer,\n    }\n  }, {})\n\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Questions} _reloquent.Questions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Question} _reloquent.Question\n */","import askQuestions from './lib/ask-questions'\n\n/**\n * Ask user questions via the CLI. Returns an object with keys as questions' texts and values as answers.\n * @param {_reloquent.Questions} questions A set of questions.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport default async function reloquent(questions, timeout) {\n  const res = await askQuestions(questions, timeout)\n  return res\n}\n\n/**\n * Ask user a question via the CLI. Returns the answer to the question.\n * @param {string|!_reloquent.Question} question A question to present to the user.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function askSingle(question, timeout) {\n  const { question: answer } = await askQuestions({ question }, timeout)\n  return answer\n}\n\n/**\n * Ask a yes/no question. Returns `true` when answer was `y` and `false` otherwise.\n * @param {string} question The question, such as \"Add default options\", or \"Continue to delete?\".\n * @param {_reloquent.ConfirmOptions} [options] Options for the confirmation question.\n * @param {boolean} [options.defaultYes=true] Whether the default value is _yes_. Default `true`.\n * @param {number} [options.timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function confirm(question, options = {}) {\n  const {\n    defaultYes = true,\n    timeout,\n  } = options\n  const hasQ = question.endsWith('?')\n  const text = `${hasQ ? question.replace(/\\?$/, '') : question} (y/n)${hasQ ? '?' : ''}`\n  const { question: answer } = await askQuestions({\n    question: {\n      text,\n      defaultValue: defaultYes ? 'y' : 'n',\n    },\n  }, timeout)\n  return answer == 'y'\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ConfirmOptions} _reloquent.ConfirmOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Question} _reloquent.Question\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Questions} _reloquent.Questions\n */\n","/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {Array<string>} keys Keys to use to create an captured group object.\n * @param {boolean} addPositions Whether to include positions in the return.\n * @example\n *\n```js\nconst re = /(test) inside of a (string)(\\d)?/ig\nconst s = 'Test inside of a STRING1. TEST inside of a string.'\nconst keys = ['test', 'string', 'number']\nconst res = mismatch(re, s, keys)\n\n// result:\n[\n {\n   test: 'Test',\n   string: 'STRING',\n   number: '1',\n },\n {\n   test: 'TEST',\n   string: 'string',\n },\n]\n```\n */\nexport default function mismatch(re, string, keys, addPositions = false) {\n  /** @type {!Array<!Object<string, string>>} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    // remove position and input\n    const position = args[args.length - 2]\n    const start = addPositions ? { position } : {}\n    const p = args.slice(0, args.length - 2)\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup !== undefined)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, start)\n    m.push(o)\n  })\n  return m\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import mismatch from 'mismatch'\nimport { askSingle } from 'reloquent'\nimport { c } from 'erte'\n\nexport const extractOptions = (body) => {\n  const res = mismatch(\n    /<option value=\"(\\d+-phone)\">(.+?(\\d\\d\\d))<\\/option>/g,\n    body,\n    ['value', 'title', 'last']\n  )\n  return res\n}\n\nexport const extractFormState = (body) => {\n  const res = mismatch(\n    /<input type=\"hidden\" name=\"(.+?)\" id=\"__\\w+\" value=\"(.*?)\" \\/>/g,\n    body,\n    ['name', 'value'],\n  )\n  const r = res.reduce((acc, { name, value }) => {\n    return {\n      ...acc,\n      [name]: value,\n    }\n  }, {})\n  return r\n}\n\nconst mapPhoneOptions = o => {\n  const r = /(.+?)(\\d\\d\\d)$/.exec(o)\n  if (!r) return o\n  const [, g, n] = r\n  const gr = c(g, 'grey')\n  const co = `${gr}${n}`\n  return co\n}\n\nconst getColorOptions = (options) => {\n  const n = options\n    .map(({ 'title': title }) => ` ${title}`)\n    .map(mapPhoneOptions)\n    .join('\\n')\n  return n\n}\n\nexport const askForNumber = async (options, phone) => {\n  const s = getColorOptions(options)\n  const text = `Which phone number to use for 2 factor auth\n${s}\nenter last 3 digits`\n\n  const answer = await askSingle({\n    text,\n    async getDefault() {\n      return phone || options[0]['last']\n    },\n    validation(a) {\n      const p = options.some(({ 'last': last }) => last == a)\n      if (!p) {\n        throw new Error('Unknown number entered.')\n      }\n    },\n  })\n\n  const { value } = options.find(({ 'last': last }) => last == answer)\n  return value\n}\n\n/**\n * @param {string} body\n */\nexport const extractXsrf = (body) => {\n  const re = /<input type=\"hidden\" id=\"x-ncpl-csrfvalue\" value=\"(.+?)\"/\n  const res = re.exec(body)\n  if (!res) throw new Error('Could not find the x-ncpl-csrfvalue token on the page.')\n  const [, token] = res\n  return token\n}\n\n/**\n * Single level deep equal.\n */\nexport const deepEqual = (o1, o2) => {\n  const r = Object.keys(o1).reduce((acc, key) => {\n    const val = o1[key]\n    const val2 = o2[key]\n    if (!(key in o2)) {\n      const k = `-  ${key}`\n      const s = c(`${k}: ${val}`, 'red')\n      return [...acc, s]\n    } else if (val !== val2) {\n      const k = `-  ${key}`\n      const k2 = `+  ${key}`\n      const s = c(`${k}: ${val}`, 'red')\n      const s2 = c(`${k2}: ${val2}`, 'green')\n      return [...acc, s, s2]\n    }\n    return acc\n  }, [])\n  const r2 = Object.keys(o2).reduce((acc, key) => {\n    const val = o1[key]\n    if (!(key in o1)) {\n      const k = `+  ${key}`\n      const s = c(`${k}: ${val}`, 'green')\n      return [...acc, s]\n    }\n    return acc\n  }, r)\n  if (r2.length) {\n    const m = `\n{\n${r2.join('\\n')}\n}`.trim()\n    throw new Error(m)\n  }\n}","import { debuglog } from 'util'\nimport { Session } from 'rqt'\nimport { ok } from 'assert'\nimport { askSingle } from 'reloquent'\nimport {\n  extractOptions, extractFormState, askForNumber,\n} from './'\n\nconst LOG = debuglog('@rqt/namecheap-web')\n\n/**\n * A class used for 2-factor authentication.\n */\nexport default class Authenticator {\n  constructor({\n    username,\n    password,\n    phone,\n    host,\n    userAgent,\n  } = {}) {\n    const session = new Session({\n      host,\n      headers: {\n        'User-Agent': userAgent,\n      },\n    })\n    this._username = username\n    this._password = password\n    this._session = session\n    this._phone = phone\n    /** @type {?string} */\n    this.SessionKey = null\n  }\n  async obtainSession() {\n    const u = '/cart/ajax/SessionHandler.ashx'\n    const { 'SessionKey': SessionKey } = await this.session.jqt(u)\n    if (!SessionKey)\n      throw new Error(`Could not acquire the session key from ${this.session.host}${u}.`)\n    LOG('Obtained a session key %s', SessionKey)\n    this.SessionKey = SessionKey\n  }\n  async signIn() {\n    const {\n      body,\n      statusCode,\n      headers: { location },\n    } = await this.session.aqt(Authenticator.LOGIN_URL, {\n      data: {\n        'hidden_LoginPassword': '',\n        'LoginUserName': this._username,\n        'LoginPassword': this._password,\n        'sessionEncryptValue': this.SessionKey,\n      },\n      type: 'form',\n    })\n    if (statusCode == 200) {\n      this.checkValidationError(body) // throws with validation message\n    } else if (statusCode == 301) {\n      return this.session.cookies\n    }\n    if (statusCode == 302 && location.includes(Authenticator.SECOND_AUTH_URL))\n      await this.secondAuth()\n    else throw new Error(`Unknown result (status code ${statusCode})`)\n    const { cookies } = this.session\n    return cookies\n  }\n  static get LOGIN_URL() {\n    return '/myaccount/login-signup.aspx'\n  }\n  static get SECOND_AUTH_URL() {\n    return '/myaccount/twofa/secondauth.aspx'\n  }\n  async secondAuth() {\n    const body = await this.session.rqt(Authenticator.SECOND_AUTH_URL)\n\n    ok(\n      /Select Phone Contact Number/.test(body),\n      'Could not find the \"Select Phone\" section.',\n    )\n\n    const options = extractOptions(body)\n    ok(options.length, 'Could not find any numbers.')\n\n    const value = await askForNumber(options, this._phone)\n\n    const fs = extractFormState(body)\n    const data = {\n      ...fs,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$ddlAuthorizeList': value,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnSendVerification': 'Proceed with Login',\n    }\n    const body2 = await this.session.rqt(Authenticator.SECOND_AUTH_URL, {\n      data,\n      type: 'form',\n    })\n\n    if (/You have reached the limit on the number.+/m.test(body2))\n      throw new Error(body2.match(/You have reached the limit on the number.+/m)[0])\n\n    ok(\n      /We sent a message with the verification code/.test(body2),\n      'Could not find the code entry section.',\n    )\n\n    await this.submitCode(body2)\n  }\n  async submitCode(body) {\n    const [, b] = /Your 6-digit code begins with (\\d)./.exec(body) || []\n    if (!b) throw new Error('Could not send the code.')\n\n    const code = await askSingle({\n      text: `Security code (begins with ${b})`,\n    })\n    const fs = extractFormState(body)\n    const data = {\n      ...fs,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$txtAuthVerification': code,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnVerify': 'Submit Security Code',\n    }\n\n    const {\n      body: body2,\n      headers: { location: location2 },\n    } = await this.session.aqt(Authenticator.SECOND_AUTH_URL, {\n      data,\n      type: 'form',\n    })\n    if (/Oops, you entered an invalid code.+/m.test(body2)) {\n      console.log('Incorrect code, try again.')\n      const res = await this.submitCode(body2)\n      return res\n    }\n    ok(/Object moved/.test(body2), 'Expected to have been redirected after sign-in.')\n    return location2\n  }\n  /**\n   * @param {string} body\n   */\n  checkValidationError(body) {\n    const validationErrorRe = /<strong class=\"title\">Validation Error<\\/strong>\\s+<div>(.+?)<\\/div>/\n    const [, err] = validationErrorRe.exec(body) || []\n    if (err) throw new Error(err.replace(/(<([^>]+)>)/ig, ''))\n  }\n  get session() {\n    return this._session\n  }\n}","import { Session } from 'rqt'\nimport { extractXsrf } from './'\n\n/** @param {_namecheap.AjaxResult} res */\nconst checkError = (res) => {\n  if (res.__isError) {\n    const err = new Error(res.Message)\n    Object.assign(err, res)\n    throw err\n  }\n  if (!res.Success) {\n    const t = res.Errors.map(({ Message }) => Message).join(', ')\n    const r = new Error(t)\n    r.__type = res.__type\n    throw r\n  }\n}\n\nexport default class App {\n  constructor({\n    cookies,\n    host,\n    userAgent,\n    password, // needed for confirmations\n  }) {\n    const session = new Session({\n      host,\n      headers: {\n        'User-Agent': userAgent,\n      },\n    })\n    session.cookies = cookies\n    this._session = session\n    this.password = password\n  }\n  get session() {\n    return this._session\n  }\n  /**\n   * @param {string} body\n   */\n  getToken(body) {\n    const token = extractXsrf(body)\n    return token\n  }\n  async test() {\n    const { statusCode } = await this.session.aqt('/', {\n      justHeaders: true,\n    })\n    const res = statusCode == 200\n    return res\n  }\n  /**\n   * @param {string} ipAddress\n   * @param {string} [name]\n   */\n  async whitelistIP(\n    ipAddress,\n    name = `@rqt ${new Date().toLocaleString()}`.replace(/:/g, '-'),\n  ) {\n    const token = await this.requestToken(App.WHITELISTED_UPS)\n    const apiUrl = App.getApiUrl('AddIpAddress')\n    const data = {\n      'accountPassword': this.password,\n      'ipAddress': ipAddress,\n      'name': name,\n    }\n    await this.request(apiUrl, token, data)\n  }\n  static get WHITELISTED_UPS() {\n    return '/settings/tools/apiaccess/whitelisted-ips'\n  }\n  /**\n   * @param {string} name\n   */\n  async removeWhitelistedIP(name) {\n    const token = await this.requestToken(App.WHITELISTED_UPS)\n    const apiUrl = App.getApiUrl('RemoveIpAddresses')\n    await this.request(apiUrl, token, {\n      'accountPassword': this.password,\n      'names': [name],\n    })\n  }\n  static getApiUrl(page) {\n    return `/api/v1/ncpl/apiaccess/ui/${page}`\n  }\n  /**\n   * @param {string} url\n   */\n  async requestToken(url) {\n    const body = await this.session.rqt(url)\n    const token = this.getToken(body)\n    return token\n  }\n  async getWhitelistedIPList() {\n    const token = await this.requestToken(App.WHITELISTED_UPS)\n    const apiUrl = App.getApiUrl('GetWhitelistedIpAddresses')\n    const { 'IpAddresses': IpAddresses } = await this.request(apiUrl, token)\n    const res = IpAddresses\n      .map(({ 'Name': name, 'IpAddress': ip, 'ModifyDate': date }) => ({\n        'Name': name,\n        'IpAddress': ip,\n        'ModifyDate': new Date(`${date}Z`),\n      }))\n    return res\n  }\n  /**\n   * @param {string} url\n   * @param {string} token\n   * @param {!Object} [data]\n   */\n  async request(url, token, data) {\n    const res = /** @type {_namecheap.AjaxResult} */ (await this.session.jqt(url, {\n      data,\n      headers: {\n        'x-ncpl-rcsrf': token,\n      },\n    }))\n    checkError(res)\n    const { 'Data': d } = res\n    return d\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').AjaxResult} _namecheap.AjaxResult\n */","import { debuglog } from 'util'\nimport bosom from 'bosom'\nimport getIp from '@rqt/ip'\nimport Authenticator from './lib/Authenticator'\nimport App from './lib/App'\nimport { deepEqual } from './lib'\nimport whois from './whois'\nimport coupon from './coupon'\n\nconst LOG = debuglog('@rqt/namecheap-web')\n\n/**\n * @param {boolean} [S]\n */\nconst getHost = (S = false) => {\n  return `https://www.${S ? 'sandbox.' : ''}namecheap.com`\n}\n/**\n * @param {boolean} [S]\n */\nconst getApHost = (S = false) => {\n  return `https://ap.www.${S ? 'sandbox.' : ''}namecheap.com`\n}\n\nconst USER_AGENT = 'Mozilla/5.0 (Node.js; @rqt/namecheap-web) https://github.com/rqt/namecheap-web'\n\n/**\n * An API to namecheap.com via the web interface, with an ability to log in using 2-factor Auth and check Whois.\n * @implements {_namecheap.NamecheapWeb}\n */\nexport default class NamecheapWeb {\n  /**\n   * Create an instance of a new client.\n   * @param {!_namecheap.Options} options Options for the web client.\n   * @param {boolean} [options.sandbox=false] Whether to use the `sandbox` version. Default `false`.\n   * @param {boolean} [options.readSession=false] Read and store the cookies for the session from the local file. Default `false`.\n   * @param {string} [options.sessionFile=\".namecheap-web.json\"] If reading session, indicates the file where to store cookies. Default `.namecheap-web.json`.\n   */\n  constructor(options = {}) {\n    const {\n      sandbox,\n      readSession,\n      sessionFile = '.namecheap-web.json',\n    } = options\n    this.settings = {\n      sandbox,\n      readSession,\n      sessionFile,\n    }\n    /** @type {App} */\n    this._app = null\n  }\n\n  /**\n   * Return the whois information about the domain.\n   * @param {string} domain\n   */\n  static async WHOIS(domain) {\n    return whois(domain, USER_AGENT)\n  }\n  /**\n   *\n   * Return the coupon from the https://www.namecheap.com/promos/coupons/ page.\n   */\n  static async COUPON() {\n    return coupon(USER_AGENT)\n  }\n  /**\n   * Return the coupon from the https://www.sandbox.namecheap.com/promos/coupons/ page.\n   */\n  static async SANDBOX_COUPON() {\n    return coupon(USER_AGENT, true)\n  }\n\n  /**\n   * @param {string} username\n   * @param {string} password\n   * @param {string} [phone]\n   * @param {boolean} [force]\n   */\n  async auth(username, password, phone, force = false) {\n    let cookies\n    if (this.settings.readSession && !force) {\n      cookies = await getSession(this.settings.sessionFile)\n    }\n    if (!cookies) {\n      const host = getHost(this.settings.sandbox)\n      const authenticator = new Authenticator({\n        username,\n        password,\n        host,\n        phone,\n        userAgent: USER_AGENT,\n      })\n\n      await authenticator.obtainSession()\n      cookies = await authenticator.signIn()\n      await this._saveSession(cookies)\n    }\n\n    const apHost = getApHost(this.settings.sandbox)\n    this._app = new App({\n      cookies,\n      password,\n      host: apHost,\n      userAgent: USER_AGENT,\n    })\n    const works = await this._wrap(this._app.test())\n    if (!works && force) {\n      throw new Error('Could not authenticate.')\n    }\n    if (!works) {\n      await this.auth(username, password, phone, true)\n    }\n  }\n  async _saveSession(cookies) {\n    if (this.settings.readSession) {\n      await saveSession(cookies, this.settings.sessionFile)\n    }\n  }\n  /**\n   * Execute a method from the app and update cookies file if needed (to extend session).\n   * @private\n   */\n  async _wrap(p) {\n    const c = getAllowedCookies(this._app.session.cookies)\n    const res = await p\n    const c2 = getAllowedCookies(this._app.session.cookies)\n    try {\n      deepEqual(c, c2)\n    } catch ({ message }) {\n      LOG(message)\n      await this._saveSession(c2)\n    }\n    return res\n  }\n  /**\n   * Add an IP to white-listed IPs.\n   * @param {string} ip\n   * @param {string} [name]\n   */\n  async whitelistIP(ip, name) {\n    await this._wrap(this._app.whitelistIP(ip, name))\n  }\n  /**\n   * Get the list of all whitelisted IP addresses from https://ap.www.namecheap.com/settings/tools/apiaccess/whitelisted-ips.\n   */\n  async getWhitelistedIPList() {\n    const res = /** @type {!Array<!_namecheap.WhitelistedIP>} */ (await this._wrap(this._app.getWhitelistedIPList()))\n    return res\n  }\n  /**\n   * Get the public IP address using https://api.ipify.org.\n   */\n  static async LOOKUP_IP() {\n    const res = await getIp()\n    return res\n  }\n  /**\n   * Remove the IP from the white-listed IPs by its name.\n   * @param {string} name\n   */\n  async removeWhitelistedIP(name) {\n    await this._wrap(this._app.removeWhitelistedIP(name))\n  }\n}\n\nconst getAllowedCookies = (cookies) => {\n  const keys = ['x-ncpl-auth', '.ncauth', 'SessionId', 'U']\n  return Object.keys(cookies).reduce((acc, k) => {\n    if (keys.includes(k)) return { ...acc, [k]: cookies[k] }\n    return acc\n  }, {})\n}\n\nconst getSession = async (path) => {\n  try {\n    const cookies = await bosom(path)\n    return cookies\n  } catch (err) {\n    return null\n  }\n}\nconst saveSession = async (cookies, path) => {\n  await bosom(path, cookies)\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Options} _namecheap.Options\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').WhitelistedIP} _namecheap.WhitelistedIP\n */","import '../types/externs'\nimport NamecheapWeb from './'\n\nmodule.exports = NamecheapWeb"],
"names":["debuglog","util","createReadStream","createWriteStream","fs","Writable","stream","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","re","RegExp","source","replace","j","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","res","read","path","write","data","ws","err","end","LOG","writeJSON","config","replacer","space","json","JSON","stringify","bosom","parse","request","https","http","url","createGunzip","zlib","isMessageGzip","contentEncoding","headers","makeRequest","requestOptions","justHeaders","req","body","rawLength","byteLength","then","statusMessage","statusCode","destroy","isGzip","error","abort","parsedBody","getFormData","form","keys","reduce","urlEncodedDataPairs","acc","key","v","p","encodeURIComponent","exec","contentType","startsWith","response","ua","version","name","require","aqt","address","type","outgoingHeaders","compress","method","timeout","hostname","protocol","port","_d","_request","location","Cookie","getFullUrl","host","loc","cookies","updateCookies","Session","getCookieHeader","s","val","newCookies","extractCookies","current","setCookie","value","c","ok","assert","createInterface","readline","createTimeout","desc","setTimeout","makeTimeoutPromise","to","reject","createPromiseWithTimeout","toPromise","race","clearTimeout","ask","question","password","output","process","stdout","input","stdin","rest","rl","o","repeat","bind","promto","tryPromise","close","askQuestions","questions","accRes","text","endsWith","gotDefaultValue","defaultValue","getDefault","dv","gtd","answer","a","validation","postProcess","askSingle","mismatch","string","capturedGroup","i","start","colors","color","cc","extractFormState","mapPhoneOptions","g","n","co","gr","getColorOptions","title","askForNumber","phone","some","last","find","deepEqual","o1","o2","val2","k","s2","k2","r2","obtainSession","SessionKey","session","jqt","u","secondAuth","rqt","Authenticator","SECOND_AUTH_URL","_phone","body2","submitCode","signIn","LOGIN_URL","_username","_password","validationErrorRe","b","code","location2","console","log","username","userAgent","_session","checkError","__isError","Message","Success","t","Errors","__type","getApiUrl","page","requestToken","App","WHITELISTED_UPS","token","whitelistIP","ipAddress","toLocaleString","Date","App$$module$src$lib$App.getApiUrl","apiUrl","removeWhitelistedIP","getWhitelistedIPList","IpAddresses","ip","date","getHost","S","getApHost","_saveSession","settings","readSession","saveSession","sessionFile","_wrap","getAllowedCookies","_app","c2","NamecheapWeb","sandbox","force","getSession","authenticator","USER_AGENT","apHost","works","auth","module","exports"]
}
